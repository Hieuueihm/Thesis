module Zero_one_counter(input clk,
                        input rst,
                        input done_i,
                        input data_i,
                        input progress_done_i,
                        output [15:0] bit_one_o,
                        output [15:0] bit_zero_o,
                        output done_o);
    
    
    // bit one
    wire [15:0] bit_one, bit_zero;
    wire [15:0] mux_1;
    wire [15:0] mux_2;
    assign mux_2 = (data_i == 1'b1) ? bit_one ? bit_zero;
    assign mux_1 = (rst == 1'b1) ? 16'b0 : mux_2;
    wire [15:0] sum_with_1;
    assign sum_with_1 = mux_1 + 1;
    dff #(.WIDTH(16)) BIT_ONE (
    .clk(clk),
    .rst(rst),
    .en(done_i & data_i),
    .D(sum_with_1),
    .Q(bit_one)
    );
    dff #(.WIDTH(16)) BIT_Zero (
    .clk(clk),
    .rst(rst),
    .en(done_i &  ~data_i),
    .D(sum_with_1),
    .Q(bit_zero)
    );
    assign bit_one_o  = bit_one;
    assign bit_zero_o = bit_zero;
    
    
    
endmodule
